/*‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° **10 ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°** ‡πÉ‡∏ô **C++** ‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏™‡πÑ‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà 14 ‡∏ñ‡∏∂‡∏á‡∏™‡πÑ‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà 24 ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞ **3 ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏ç‡πà‡πÜ** ‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô üöÄ

---

### üü¢ **1. ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏â‡∏û‡∏≤‡∏∞ (Prime Numbers - Loops & Conditionals)**
**üìå ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:** Loops, Conditional Statements

```cpp
#include <iostream>
using namespace std;

bool isPrime(int num) {
    if (num < 2) return false;
    for (int i = 2; i * i <= num; i++) {
        if (num % i == 0) return false;
    }
    return true;
}

int main() {
    int n;
    cout << "‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: ";
    cin >> n;

    if (isPrime(n)) {
        cout << n << " ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞\n";
    } else {
        cout << n << " ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞\n";
    }

    return 0;
}
```

---

### üü¢ **2. ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ (Arrays & Structs)**
**üìå ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:** Arrays, Structs

```cpp
#include <iostream>
using namespace std;

struct Student {
    string name;
    int age;
    double gpa;
};

int main() {
    Student students[3];

    for (int i = 0; i < 3; i++) {
        cout << "‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠: ";
        cin >> students[i].name;
        cout << "‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏: ";
        cin >> students[i].age;
        cout << "‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ";
        cin >> students[i].gpa;
    }

    cout << "\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤:\n";
    for (int i = 0; i < 3; i++) {
        cout << "‡∏ä‡∏∑‡πà‡∏≠: " << students[i].name
             << ", ‡∏≠‡∏≤‡∏¢‡∏∏: " << students[i].age
             << ", GPA: " << students[i].gpa << endl;
    }

    return 0;
}
```

---

### üü¢ **3. ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏≤‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô‡∏≠‡∏≤‡πÄ‡∏£‡∏¢‡πå (Array & Loop)**
**üìå ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:** Arrays, Loops

```cpp
#include <iostream>
using namespace std;

int main() {
    int numbers[5], sum = 0;
    
    for (int i = 0; i < 5; i++) {
        cout << "‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà " << i + 1 << ": ";
        cin >> numbers[i];
        sum += numbers[i];
    }

    cout << "‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ñ‡∏∑‡∏≠: " << sum << endl;
    return 0;
}
```

---

### üü¢ **4. ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà-‡∏Ñ‡∏µ‡πà ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏ú‡∏•‡∏£‡∏ß‡∏° (Conditionals & Loops)**
**üìå ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:** Conditionals, Loops

```cpp
#include <iostream>
using namespace std;

int main() {
    int num, evenSum = 0, oddSum = 0;

    for (int i = 0; i < 5; i++) {
        cout << "‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç: ";
        cin >> num;

        if (num % 2 == 0) evenSum += num;
        else oddSum += num;
    }

    cout << "‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà: " << evenSum << endl;
    cout << "‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà: " << oddSum << endl;

    return 0;
}
```

---

### üü¢ **5. ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏°‡∏ß‡∏•‡∏Å‡∏≤‡∏¢ (BMI) (Functions & Conditionals)**
**üìå ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:** Functions, Conditional Statements

```cpp
#include <iostream>
using namespace std;

double calculateBMI(double weight, double height) {
    return weight / (height * height);
}

int main() {
    double weight, height;
    cout << "‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (kg): ";
    cin >> weight;
    cout << "‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á (m): ";
    cin >> height;

    double bmi = calculateBMI(weight, height);
    cout << "‡∏Ñ‡πà‡∏≤ BMI ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠: " << bmi << endl;

    return 0;
}
```

---

### üü¢ **6. ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô (Vectors & Loops)**
**üìå ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:** Vectors, Loops

```cpp
#include <iostream>
#include <vector>
using namespace std;

int main() {
    vector<string> customers;
    string name;

    for (int i = 0; i < 3; i++) {
        cout << "‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ";
        cin >> name;
        customers.push_back(name);
    }

    cout << "\n‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:\n";
    for (string c : customers) {
        cout << "- " << c << endl;
    }

    return 0;
}
```

---

## üî• **‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏ç‡πà 3 ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢**

### üü† **7. ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ (Structs & Vectors)**
```cpp
#include <iostream>
#include <vector>
using namespace std;

struct Product {
    string name;
    double price;
};

int main() {
    vector<Product> products;
    int choice;

    do {
        cout << "\n1. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤\n2. ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤\n3. ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°\n‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ";
        cin >> choice;
        
        if (choice == 1) {
            Product p;
            cout << "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ";
            cin >> p.name;
            cout << "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ";
            cin >> p.price;
            products.push_back(p);
        } else if (choice == 2) {
            for (size_t i = 0; i < products.size(); i++) {
                cout << i + 1 << ". " << products[i].name << " - " << products[i].price << " ‡∏ö‡∏≤‡∏ó\n";
            }
        }

    } while (choice != 3);

    return 0;
}
```

---

### üü† **8. ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏≠‡πà‡∏≤‡∏ô-‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ (File Handling)**
```cpp
#include <iostream>
#include <fstream>
using namespace std;

struct Student {
    string name;
    int score;
};

int main() {
    ofstream file("students.txt");
    if (!file) {
        cout << "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ\n";
        return 1;
    }

    int n;
    cout << "‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤: ";
    cin >> n;
    Student students[n];

    for (int i = 0; i < n; i++) {
        cout << "‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ";
        cin >> students[i].name;
        cout << "‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: ";
        cin >> students[i].score;
        file << students[i].name << " " << students[i].score << "\n";
    }
    file.close();

    ifstream inputFile("students.txt");
    string name;
    int score;
    while (inputFile >> name >> score) {
        cout << "‡∏ä‡∏∑‡πà‡∏≠: " << name << " | ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: " << score << "\n";
    }
    inputFile.close();

    return 0;
}
```

---

### üü† **9. ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏•‡∏¥‡∏™‡∏ï‡πå (Linked List)**
```cpp
#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
};

void insert(Node*& head, int value) {
    Node* newNode = new Node;
    newNode->data = value;
    newNode->next = head;
    head = newNode;
}

void display(Node* head) {
    while (head != nullptr) {
        cout << head->data << " -> ";
        head = head->next;
    }
    cout << "NULL\n";
}

int main() {
    Node* head = nullptr;
    insert(head, 10);
    insert(head, 20);
    insert(head, 30);
    
    cout << "Linked List:\n";
    display(head);

    return 0;
}
```

---

## **üî• ‡∏™‡∏£‡∏∏‡∏õ**
**‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô C++** ‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà  
‚úÖ Loops & Conditionals  
‚úÖ Arrays & Structs  
‚úÖ Functions & Vectors  
‚úÖ File Handling  
‚úÖ Linked List  

‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡πÑ‡∏õ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô **VS Code** üöÄ*/